// <auto-generated />
namespace Microsoft.Framework.ConfigurationModel
{
    using System.Globalization;
    using System.Reflection;
    using System.Resources;

    internal static class Resources
    {
        private static readonly ResourceManager _resourceManager
            = new ResourceManager("Microsoft.Framework.ConfigurationModel.Resources", typeof(Resources).GetTypeInfo().Assembly);

        /// <summary>
        /// Unable to commit because the following keys are missing from the configuration file: {0}.
        /// </summary>
        internal static string Error_CommitWhenKeyMissing
        {
            get { return GetString("Error_CommitWhenKeyMissing"); }
        }

        /// <summary>
        /// Unable to commit because the following keys are missing from the configuration file: {0}.
        /// </summary>
        internal static string FormatError_CommitWhenKeyMissing(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Error_CommitWhenKeyMissing"), p0);
        }

        /// <summary>
        /// Unable to commit because a new key was added to the configuration file after last load operation. The newly added key is '{0}'.
        /// </summary>
        internal static string Error_CommitWhenNewKeyFound
        {
            get { return GetString("Error_CommitWhenNewKeyFound"); }
        }

        /// <summary>
        /// Unable to commit because a new key was added to the configuration file after last load operation. The newly added key is '{0}'.
        /// </summary>
        internal static string FormatError_CommitWhenNewKeyFound(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Error_CommitWhenNewKeyFound"), p0);
        }

        /// <summary>
        /// Keys in switch mappings are case-insensitive. A duplicated key '{0}' was found.
        /// </summary>
        internal static string Error_DuplicatedKeyInSwitchMappings
        {
            get { return GetString("Error_DuplicatedKeyInSwitchMappings"); }
        }

        /// <summary>
        /// Keys in switch mappings are case-insensitive. A duplicated key '{0}' was found.
        /// </summary>
        internal static string FormatError_DuplicatedKeyInSwitchMappings(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Error_DuplicatedKeyInSwitchMappings"), p0);
        }

        /// <summary>
        /// File path must be a non-empty string.
        /// </summary>
        internal static string Error_InvalidFilePath
        {
            get { return GetString("Error_InvalidFilePath"); }
        }

        /// <summary>
        /// File path must be a non-empty string.
        /// </summary>
        internal static string FormatError_InvalidFilePath()
        {
            return GetString("Error_InvalidFilePath");
        }

        /// <summary>
        /// The switch mappings contain an invalid switch '{0}'.
        /// </summary>
        internal static string Error_InvalidSwitchMapping
        {
            get { return GetString("Error_InvalidSwitchMapping"); }
        }

        /// <summary>
        /// The switch mappings contain an invalid switch '{0}'.
        /// </summary>
        internal static string FormatError_InvalidSwitchMapping(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Error_InvalidSwitchMapping"), p0);
        }

        /// <summary>
        /// A duplicate key '{0}' was found.
        /// </summary>
        internal static string Error_KeyIsDuplicated
        {
            get { return GetString("Error_KeyIsDuplicated"); }
        }

        /// <summary>
        /// A duplicate key '{0}' was found.
        /// </summary>
        internal static string FormatError_KeyIsDuplicated(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Error_KeyIsDuplicated"), p0);
        }

        /// <summary>
        /// No registered configuration source is capable of committing changes.
        /// </summary>
        internal static string Error_NoCommitableSource
        {
            get { return GetString("Error_NoCommitableSource"); }
        }

        /// <summary>
        /// No registered configuration source is capable of committing changes.
        /// </summary>
        internal static string FormatError_NoCommitableSource()
        {
            return GetString("Error_NoCommitableSource");
        }

        /// <summary>
        /// No source was found in this configuration.
        /// </summary>
        internal static string Error_NoSource
        {
            get { return GetString("Error_NoSource"); }
        }

        /// <summary>
        /// No source was found in this configuration.
        /// </summary>
        internal static string FormatError_NoSource()
        {
            return GetString("Error_NoSource");
        }

        /// <summary>
        /// The short switch '{0}' is not defined in the switch mappings.
        /// </summary>
        internal static string Error_ShortSwitchNotDefined
        {
            get { return GetString("Error_ShortSwitchNotDefined"); }
        }

        /// <summary>
        /// The short switch '{0}' is not defined in the switch mappings.
        /// </summary>
        internal static string FormatError_ShortSwitchNotDefined(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Error_ShortSwitchNotDefined"), p0);
        }

        /// <summary>
        /// Unrecognized argument format: '{0}'.
        /// </summary>
        internal static string Error_UnrecognizedArgumentFormat
        {
            get { return GetString("Error_UnrecognizedArgumentFormat"); }
        }

        /// <summary>
        /// Unrecognized argument format: '{0}'.
        /// </summary>
        internal static string FormatError_UnrecognizedArgumentFormat(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Error_UnrecognizedArgumentFormat"), p0);
        }

        /// <summary>
        /// Unrecognized line format: '{0}'.
        /// </summary>
        internal static string Error_UnrecognizedLineFormat
        {
            get { return GetString("Error_UnrecognizedLineFormat"); }
        }

        /// <summary>
        /// Unrecognized line format: '{0}'.
        /// </summary>
        internal static string FormatError_UnrecognizedLineFormat(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Error_UnrecognizedLineFormat"), p0);
        }

        /// <summary>
        /// Value for switch '{0}' is missing.
        /// </summary>
        internal static string Error_ValueIsMissing
        {
            get { return GetString("Error_ValueIsMissing"); }
        }

        /// <summary>
        /// Value for switch '{0}' is missing.
        /// </summary>
        internal static string FormatError_ValueIsMissing(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Error_ValueIsMissing"), p0);
        }

        private static string GetString(string name, params string[] formatterNames)
        {
            var value = _resourceManager.GetString(name);

            System.Diagnostics.Debug.Assert(value != null);

            if (formatterNames != null)
            {
                for (var i = 0; i < formatterNames.Length; i++)
                {
                    value = value.Replace("{" + formatterNames[i] + "}", "{" + i + "}");
                }
            }

            return value;
        }
    }
}
